{"ast":null,"code":"import _regeneratorRuntime from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jennifer/Script/helloAVM_web3_aiwa/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jennifer/Script/helloAVM_web3_aiwa/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'reactstrap';\nimport Web3 from 'aion-web3';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      setInterval(function () {\n        if (window.aionweb3) {\n          this.setState({\n            aionweb3: window.aionweb3 //detect aiwa\n\n          });\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))), 1000);\n      setInterval(_this.getFunction, 1000);\n    };\n\n    _this.sendTransactionFunction =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(mystring) {\n        var web3, data, txObject;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //set web3\n                web3 = new Web3(new Web3.providers.HttpProvider(_this.state.httpProvider)); //set aiwa accouunt\n\n                try {\n                  _this.setState({\n                    account: window.aionweb3.account[0]\n                  });\n                } catch (e) {\n                  console.error(\"no account for sending\", e.message);\n                } //the contract method you want to call\n\n\n                data = web3.avm.contract.method('setString').inputs(['string'], [mystring]).encode();\n                txObject = {\n                  from: _this.state.account,\n                  to: _this.state.ctAddress,\n                  data: data,\n                  gas: 2000000,\n                  type: \"0x1\" //for any transaction except for java contract deployment\n\n                };\n                _context.prev = 4;\n                _context.next = 7;\n                return window.aionweb3.sendTransaction(txObject);\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getFunction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, data, txObject, res, returnValue;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = new Web3(new Web3.providers.HttpProvider(_this.state.httpProvider)); //set aiwa accouunt\n\n              try {\n                _this.setState({\n                  account: window.aionweb3.account[0]\n                });\n              } catch (e) {\n                console.error(\"no account for sending\", e.message);\n              }\n\n              data = web3.avm.contract.method('getString').encode();\n              txObject = {\n                from: _this.account,\n                to: _this.state.ctAddress,\n                gas: 100000,\n                gasPrice: 1,\n                data: data\n              };\n              _context2.prev = 4;\n              _context2.next = 7;\n              return web3.eth.call(txObject);\n\n            case 7:\n              res = _context2.sent;\n              _context2.next = 10;\n              return web3.avm.contract.decode('string', res);\n\n            case 10:\n              returnValue = _context2.sent;\n\n              _this.setState({\n                result: returnValue\n              });\n\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(\"fail calling\");\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 14]]);\n    }));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      //alert('A name was submitted: ' + this.state.value);\n      _this.sendTransactionFunction(_this.state.value);\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      aionweb3: null,\n      aiwa: false,\n      account: null,\n      //user account,\n      value: \" \",\n      result: \"\",\n      ctAddress: \"0xa084b42efa079ad85b2c5b6c3d8a3fc6165cb13d06553ca566c29d89e94b80d2\",\n      //contract address,\n      httpProvider: \"https://aion.api.nodesmith.io/v1/avmtestnet/jsonrpc?apiKey=ec13c1ff5f65488fa6432f5f79e595f6\"\n    };\n    return _this;\n  } //send transaction to the smart contract\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Set String:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Current String: \", this.state.result)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jennifer/Script/helloAVM_web3_aiwa/src/App.js"],"names":["React","Component","Button","Form","Web3","App","props","componentDidMount","setInterval","window","aionweb3","setState","bind","getFunction","sendTransactionFunction","mystring","web3","providers","HttpProvider","state","httpProvider","account","e","console","error","message","data","avm","contract","method","inputs","encode","txObject","from","to","ctAddress","gas","type","sendTransaction","log","gasPrice","eth","call","res","decode","returnValue","result","handleChange","event","value","target","handleSubmit","preventDefault","aiwa"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form} from 'reactstrap';\nimport Web3 from 'aion-web3';\nimport './App.css';\n\nclass App extends Component {\n    componentDidMount = () => {\n\n        setInterval(\n            function() {\n                if (window.aionweb3 ) {\n                    this.setState({\n                        aionweb3: window.aionweb3, //detect aiwa\n                    });\n\n                }\n\n            }.bind(this),\n            1000\n        );\n\n        setInterval(\n            this.getFunction,\n            1000\n        );\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            aionweb3: null,\n            aiwa: false,\n            account: null, //user account,\n            value: \" \",\n            result: \"\",\n            ctAddress: \"0xa084b42efa079ad85b2c5b6c3d8a3fc6165cb13d06553ca566c29d89e94b80d2\", //contract address,\n            httpProvider: \"https://aion.api.nodesmith.io/v1/avmtestnet/jsonrpc?apiKey=ec13c1ff5f65488fa6432f5f79e595f6\"\n        };\n    }\n\n\n    //send transaction to the smart contract\n    sendTransactionFunction = async (mystring) => {\n\n        //set web3\n        let web3 = new Web3(\n            new Web3.providers.HttpProvider(this.state.httpProvider)\n        );\n\n        //set aiwa accouunt\n        try {\n            this.setState({\n                account:  window.aionweb3.account[0]\n            })\n        } catch(e) {\n            console.error(\"no account for sending\", e.message);\n        }\n\n        //the contract method you want to call\n        let data = web3.avm.contract.method('setString').inputs(['string'],[mystring]).encode();\n        \n        const txObject = {\n            from: this.state.account,\n            to: this.state.ctAddress,\n            data: data,\n            gas: 2000000,\n            type: \"0x1\"  //for any transaction except for java contract deployment\n        };\n\n        try {\n             await window.aionweb3.sendTransaction(txObject);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n\n    //call smart contract method\n    getFunction = async () => {\n        let web3 = new Web3(\n            new Web3.providers.HttpProvider(this.state.httpProvider)\n        );\n\n        //set aiwa accouunt\n        try {\n            this.setState({\n                account:  window.aionweb3.account[0]\n            })\n        } catch(e) {\n            console.error(\"no account for sending\", e.message);\n        }\n\n        let data = web3.avm.contract.method('getString').encode();\n\n        let txObject = {\n            from:this.account,\n            to: this.state.ctAddress,\n            gas: 100000,\n            gasPrice: 1,\n            data: data\n        };\n\n        try {\n            let res = await web3.eth.call(txObject); //call a method\n            let returnValue = await web3.avm.contract.decode('string', res);\n            this.setState({\n                result: returnValue\n            });\n        } catch (err) {\n            console.log(\"fail calling\");\n        }\n    };\n\n    //get user input\n    handleChange = event => {\n        this.setState({ value: event.target.value });\n    };\n\n    handleSubmit = event => {\n        //alert('A name was submitted: ' + this.state.value);\n        this.sendTransactionFunction(this.state.value);\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div >\n                <div>\n                    <Form onSubmit={this.handleSubmit}>\n                        <label>\n                            Set String:\n                            <input\n                                type=\"text\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            />\n                        </label>\n                        <Button type=\"submit\" value=\"Submit\">\n                            Submit\n                        </Button>\n                    </Form>\n\n                    <h1>Current String: {this.state.result}</h1>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}