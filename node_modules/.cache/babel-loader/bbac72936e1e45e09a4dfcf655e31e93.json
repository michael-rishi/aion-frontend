{"ast":null,"code":"import _regeneratorRuntime from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'reactstrap';\nimport Web3 from 'aion-web3';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props, context) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      setInterval( //detect aiwa\n      function () {\n        if (window.aionweb3) {\n          this.setState({\n            aionweb3: window.aionweb3,\n            aiwa: true\n          });\n\n          try {\n            this.setState({\n              account: window.aionweb3.account[0]\n            });\n          } catch (e) {//console.error(\"no account\", e.message);\n          }\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))), 1000);\n      setInterval(_this.getFunction, 1000);\n    };\n\n    _this.sendTransactionFunction =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(mystring) {\n        var web3, ctaddress, method, data, txObject, signedTx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //set web3\n                web3 = new Web3(new Web3.providers.HttpProvider(\"https://api.nodesmith.io/v1/aion/avmtestnet/jsonrpc?apiKey=53acc93acbc34495b362d96cd72ac5c7\")); //set aiwa accouunt\n\n                try {\n                  _this.setState({\n                    account: window.aionweb3.account[0]\n                  });\n                } catch (e) {\n                  console.error(\"no account for sending\", e.message);\n                }\n\n                console.log(\"account is \" + _this.state.account); //contract address\n\n                ctaddress = \"0xa06396dc040e10e10230f6200d351e26ccb781c5f2799e6d4d905df6372e0fc4\"; //the contract method you want to call\n\n                method = web3.avm.method(\"setString\").argTypes(\"String\");\n                data = method.encodeToHex(mystring);\n                txObject = {\n                  from: _this.state.account,\n                  to: ctaddress,\n                  data: data,\n                  gas: 2000000,\n                  type: \"0xf\" //for java contract\n\n                };\n                _context.prev = 7;\n                _context.next = 10;\n                return window.aionweb3.sendTransaction(txObject);\n\n              case 10:\n                signedTx = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                console.log(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[7, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getFunction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, ctAddress, privateKey, acc, method, data, txObject, res, returnValue;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = new Web3(new Web3.providers.HttpProvider(\"https://api.nodesmith.io/v1/aion/avmtestnet/jsonrpc?apiKey=53acc93acbc34495b362d96cd72ac5c7\"));\n              ctAddress = \"0xa06396dc040e10e10230f6200d351e26ccb781c5f2799e6d4d905df6372e0fc4\";\n              privateKey = \"bb3b642bbfab34fcf2ea79ee80bd97d2c109ab13f5c8ccfec787f56e60f34ca7c0d4e3868869f4e734d18f147c16ae1336b1c9bd7d7890ee981e48933aa5604c\";\n              acc = web3.eth.accounts.privateKeyToAccount(privateKey);\n              console.log(\"account \" + acc.address);\n              method = web3.avm.method(\"getString\").argTypes();\n              data = method.encodeToHex();\n              txObject = {\n                from: acc.address,\n                to: ctAddress,\n                //gas: 100000,\n                //gasPrice: 1,\n                data: data,\n                type: \"0xf\"\n              };\n              _context2.prev = 8;\n              _context2.next = 11;\n              return web3.eth.call(txObject);\n\n            case 11:\n              res = _context2.sent;\n              _context2.next = 14;\n              return web3.avm.decodeOneObjectFromHex(res);\n\n            case 14:\n              returnValue = _context2.sent;\n              console.log(\"get \" + returnValue);\n\n              _this.setState({\n                result: returnValue\n              });\n\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](8);\n              console.log(\"fail calling\");\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[8, 19]]);\n    }));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      //alert('A name was submitted: ' + this.state.value);\n      _this.sendTransactionFunction(_this.state.value);\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      aionweb3: null,\n      aiwa: false,\n      account: null,\n      //user account,\n      value: \" \",\n      result: \"\" //contract: null\n\n    };\n    return _this;\n  } //send transaction to the smart contract\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Set String:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Current String: \", this.state.result)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jennifer/AVM_ALL/avm_web3_aiwa/avm_web3/avm-example/src/App.js"],"names":["React","Component","Button","Form","Web3","App","props","context","componentDidMount","setInterval","window","aionweb3","setState","aiwa","account","e","bind","getFunction","sendTransactionFunction","mystring","web3","providers","HttpProvider","console","error","message","log","state","ctaddress","method","avm","argTypes","data","encodeToHex","txObject","from","to","gas","type","sendTransaction","signedTx","ctAddress","privateKey","acc","eth","accounts","privateKeyToAccount","address","call","res","decodeOneObjectFromHex","returnValue","result","handleChange","event","value","target","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form} from 'reactstrap';\nimport Web3 from 'aion-web3';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    componentDidMount = () => {\n\n        setInterval(\n            //detect aiwa\n            function() {\n                if (window.aionweb3 ) {\n                    this.setState({\n                        aionweb3: window.aionweb3,\n                        aiwa: true\n                    });\n\n                    try {\n                        this.setState({\n                            account:  window.aionweb3.account[0]\n                        })\n                    }catch(e) {\n                        //console.error(\"no account\", e.message);\n                    }\n                }\n\n            }.bind(this),\n            1000\n        );\n\n\n        setInterval(\n            this.getFunction,\n            1000\n        );\n    };\n\n    constructor(props, context) {\n        super(props);\n        this.state = {\n            aionweb3: null,\n            aiwa: false,\n            account: null, //user account,\n            value: \" \",\n            result: \"\"\n            //contract: null\n        };\n    }\n\n\n    //send transaction to the smart contract\n    sendTransactionFunction = async (mystring) => {\n\n        //set web3\n        let web3 = new Web3(\n            new Web3.providers.HttpProvider(\"https://api.nodesmith.io/v1/aion/avmtestnet/jsonrpc?apiKey=53acc93acbc34495b362d96cd72ac5c7\"\n            )\n        );\n\n        //set aiwa accouunt\n        try {\n            this.setState({\n                account:  window.aionweb3.account[0]\n            })\n        } catch(e) {\n            console.error(\"no account for sending\", e.message);\n        }\n\n        console.log(\"account is \" + this.state.account);\n\n        //contract address\n        let ctaddress = \"0xa06396dc040e10e10230f6200d351e26ccb781c5f2799e6d4d905df6372e0fc4\";\n\n        //the contract method you want to call\n        let method = web3.avm.method(\"setString\").argTypes(\"String\");\n        let data = method.encodeToHex(mystring);\n\n\n        const txObject = {\n            from: this.state.account,\n            to: ctaddress,\n            data: data,\n            gas: 2000000,\n            type: \"0xf\"  //for java contract\n        };\n\n        try {\n            const signedTx = await window.aionweb3.sendTransaction(txObject);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n\n    //call smart contract method\n    getFunction = async () => {\n        let web3 = new Web3(\n            new Web3.providers.HttpProvider(\n                \"https://api.nodesmith.io/v1/aion/avmtestnet/jsonrpc?apiKey=53acc93acbc34495b362d96cd72ac5c7\"\n            )\n        );\n\n        let ctAddress =\n            \"0xa06396dc040e10e10230f6200d351e26ccb781c5f2799e6d4d905df6372e0fc4\";\n\n\n        let privateKey =\n            \"bb3b642bbfab34fcf2ea79ee80bd97d2c109ab13f5c8ccfec787f56e60f34ca7c0d4e3868869f4e734d18f147c16ae1336b1c9bd7d7890ee981e48933aa5604c\";\n        let acc = web3.eth.accounts.privateKeyToAccount(privateKey);\n        console.log(\"account \" +acc.address);\n        let method = web3.avm.method(\"getString\").argTypes();\n        let data = method.encodeToHex();\n\n\n        let txObject = {\n            from: acc.address,\n            to: ctAddress,\n            //gas: 100000,\n            //gasPrice: 1,\n            data: data,\n            type: \"0xf\"\n        };\n\n        try {\n            let res = await web3.eth.call(txObject); //call a method\n            let returnValue = await web3.avm.decodeOneObjectFromHex(res);\n            console.log(\"get \" + returnValue);\n            this.setState({\n                result: returnValue\n            });\n        } catch (err) {\n            console.log(\"fail calling\");\n        }\n\n\n    };\n\n    //get user input\n    handleChange = event => {\n        this.setState({ value: event.target.value });\n    };\n\n\n    handleSubmit = event => {\n        //alert('A name was submitted: ' + this.state.value);\n        this.sendTransactionFunction(this.state.value);\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div >\n                <div>\n                    <Form onSubmit={this.handleSubmit}>\n                        <label>\n                            Set String:\n                            <input\n                                type=\"text\"\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                            />\n                        </label>\n                        <Button type=\"submit\" value=\"Submit\">\n                            Submit\n                        </Button>\n                    </Form>\n\n                    <h1>Current String: {this.state.result}</h1>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}